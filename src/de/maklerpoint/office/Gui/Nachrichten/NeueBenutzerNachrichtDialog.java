/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NeueBenutzerNachrichtDialog.java
 *
 * Created on 14.06.2011, 12:31:25
 */
package de.maklerpoint.office.Gui.Nachrichten;

import de.maklerpoint.office.Benutzer.BenutzerObj;
import de.maklerpoint.office.Database.DatabaseConnection;
import de.maklerpoint.office.Exception.ShowException;
import de.maklerpoint.office.Gui.Exception.ExceptionDialogGui;
import de.maklerpoint.office.Gui.Tools.ComboBoxGetter;
import de.maklerpoint.office.Logging.Log;
import de.maklerpoint.office.Nachrichten.MessageObj;
import de.maklerpoint.office.Nachrichten.Tools.MessageSQLMethods;
import de.maklerpoint.office.Registry.BasicRegistry;
import de.maklerpoint.office.Registry.BenutzerRegistry;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Yves Hoppe <hoppe at maklerpoint.de>
 */
public class NeueBenutzerNachrichtDialog extends javax.swing.JDialog {

    private boolean reply = false;
    private MessageObj msg = null;
    
    /** Creates new form NeueBenutzerNachrichtDialog */
    public NeueBenutzerNachrichtDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.reply = false;
        this.msg = null;
        initComponents();
        setUp();
    }
    
    public NeueBenutzerNachrichtDialog(java.awt.Frame parent, boolean modal, MessageObj msg) {
        super(parent, modal);
        this.reply = true;
        this.msg = msg;
        initComponents();
        setUp();
    }
    
    private void setUp(){
        this.combo_benutzer.setModel(new DefaultComboBoxModel(ComboBoxGetter.getBenutzerCombo("--Bitte wählen--")));
        this.setTitle("Neue Benutzernachricht");        
        loadNachricht();        
    }
    
    private void loadNachricht(){
        if(msg == null)
            return;
        
        if(msg.getSenderId() == -1){
            JOptionPane.showMessageDialog(null, "Sie können nicht auf eine System Nachricht anworten.");
            dispose();
            return;
        }
        
        BenutzerObj empf = BenutzerRegistry.getBenutzer(msg.getSenderId(), true);
        
        this.combo_benutzer.setSelectedItem(empf);
        this.field_betreff.setText("AW: " + msg.getBetreff());
        StringBuilder sb = new StringBuilder();
        
        String[] lines = msg.getContext().split("\n");
        
        if(lines == null)
            return;
        
        sb.append("\n\n\n");
        
        for(int i = 0; i < lines.length; i++) {
            sb.append("> ");
            sb.append(lines[i]);
            sb.append("\n");
        }
        
        this.text_nachricht.setText(sb.toString());
        
        this.setTitle("Antwort an " + empf);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        field_betreff = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        combo_benutzer = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_nachricht = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        field_betreff.setName("field_betreff"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.maklerpoint.office.start.CRM.class).getContext().getResourceMap(NeueBenutzerNachrichtDialog.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        btnCancel.setMnemonic('A');
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.setPreferredSize(new java.awt.Dimension(120, 27));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnSave.setMnemonic('S');
        btnSave.setText(resourceMap.getString("btnSave.text")); // NOI18N
        btnSave.setName("btnSave"); // NOI18N
        btnSave.setPreferredSize(new java.awt.Dimension(120, 27));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        combo_benutzer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_benutzer.setName("combo_benutzer"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        text_nachricht.setColumns(20);
        text_nachricht.setRows(5);
        text_nachricht.setName("text_nachricht"); // NOI18N
        jScrollPane1.setViewportView(text_nachricht);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(combo_benutzer, 0, 568, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_betreff, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(combo_benutzer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(field_betreff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        
        int dial = JOptionPane.NO_OPTION;
        dial = JOptionPane.showConfirmDialog(null, "Wollen Sie das Fenster wirklich schließen? Alle ihre Eingaben "
                + "gehen in diesem Fall verloren.", "Wollen Sie das Fenster schließen?", JOptionPane.YES_NO_OPTION);
        if (dial == JOptionPane.YES_OPTION) {
            this.dispose();
        }
        
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        MessageObj msg = new MessageObj();
        int empf = -1;
        
        try {
            BenutzerObj ben = (BenutzerObj) this.combo_benutzer.getSelectedItem();
            empf = ben.getId();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Bitte wählen Sie einen Empfänger aus.", "Kein Empfänger", 
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        String btrf = this.field_betreff.getText().trim();
        String body = this.text_nachricht.getText();               
       
        if (btrf == null || btrf.length() < 1) {
            JOptionPane.showMessageDialog(null, "Bitte geben Sie ein Betreff an.", 
                    "Kein Betreff", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        if (body == null || body.length() < 1) {
            JOptionPane.showMessageDialog(null, "Bitte geben Sie eine Nachricht an.", 
                    "Keine Nachricht", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        msg.setEmpfaengerId(empf);
        msg.setSender(BasicRegistry.currentUser.getId());        
        msg.setBetreff(btrf);
        msg.setContext(body);
        msg.setCreated(new java.sql.Timestamp(System.currentTimeMillis()));        
        

        try {
            MessageSQLMethods.insertIntoMessages(DatabaseConnection.open(), msg);
        } catch (Exception e) {
            Log.databaselogger.fatal("Beim senden der Benutzernachricht ist ein Fehler aufgetretten", e);
            ShowException.showException("Beim senden der Benutzernachricht ist ein Fehler aufgetretten.",
                    ExceptionDialogGui.LEVEL_WARNING, e,
                    "Schwerwiegend: Konnte Nachricht nicht speichern");
        }
        
        this.dispose();
}//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                NeueBenutzerNachrichtDialog dialog = new NeueBenutzerNachrichtDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox combo_benutzer;
    private javax.swing.JTextField field_betreff;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea text_nachricht;
    // End of variables declaration//GEN-END:variables
}

/*
 *  Program:    MaklerPoint System
 *  Module:     Main
 *  Language:   Java / Swing
 *  Date:       2010/09/03 13:10
 *  Web:        http://www.maklerpoint.de
 *  Version:    0.6.1
 *
 *  Copyright (C) 2010 Yves Hoppe.  All Rights Reserved.
 *  See License.txt or http://www.maklerpoint.de/copyright for details.
 *
 *  This software is distributed WITHOUT ANY WARRANTY; without even the
 *  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 *  above copyright notices for details.
 */

/*
 * PanelConfigurationDatabase.java
 *
 * Created on 25.08.2010, 14:57:05
 */

package de.maklerpoint.office.Gui.Configuration;

import de.maklerpoint.office.Database.DatabaseConnection;
import de.maklerpoint.office.Database.DatabaseHelper;
import de.maklerpoint.office.Database.DatabaseTypes;
import de.maklerpoint.office.Database.MySQL.MySQL;
import de.maklerpoint.office.Database.PostgreSQL.PostgreSQL;
import de.maklerpoint.office.System.Configuration.Config;
import javax.swing.JOptionPane;

/**
 *
 * @author yves
 */
public class PanelConfigurationDatabase extends javax.swing.JPanel implements ConfigurationPanelInterface {

    /** Creates new form PanelConfigurationDatabase */
    public PanelConfigurationDatabase() {
        initComponents();
    }

    public String getPanelName() {
        return "Basis Einstellungen";
    }

    public int getCategory() {
        return ConfigurationPanelTypes.DATENBANK;
    }

    public void loadSettings() {
        this.field_databasename.setText(Config.get("databaseName", "maklerpointdb"));
        this.field_password.setText(Config.get("databasePassword", null));
        this.field_port.setText(Config.get("databasePort", null));
        this.field_serveraddress.setText(Config.get("databaseServer", "localhost"));
        this.field_user.setText(Config.get("databaseUsername", null));

        this.combo_servertyp.setSelectedIndex(Config.getConfigInt("databaseType", DatabaseTypes.MYSQL));
    }

    public void saveSettings() {
        Config.set("databaseName", field_databasename.getText());
        Config.set("databasePassword", String.valueOf(field_password.getPassword()));
        Config.set("databasePort", field_port.getText());
        Config.set("databaseServer", field_serveraddress.getText());
        Config.set("databaseUsername", field_user.getText());

        Config.setInt("databaseType", combo_servertyp.getSelectedIndex());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        field_serveraddress = new javax.swing.JTextField();
        field_port = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        field_user = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        field_password = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        combo_servertyp = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        field_databasename = new javax.swing.JTextField();
        btnTest = new javax.swing.JButton();
        jToolTipLabel1 = new de.maklerpoint.office.Tools.JToolTipLabel();
        jToolTipLabel2 = new de.maklerpoint.office.Tools.JToolTipLabel();
        jToolTipLabel3 = new de.maklerpoint.office.Tools.JToolTipLabel();
        jToolTipLabel4 = new de.maklerpoint.office.Tools.JToolTipLabel();
        jToolTipLabel5 = new de.maklerpoint.office.Tools.JToolTipLabel();
        jToolTipLabel6 = new de.maklerpoint.office.Tools.JToolTipLabel();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.maklerpoint.office.start.CRM.class).getContext().getResourceMap(PanelConfigurationDatabase.class);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        field_serveraddress.setText(resourceMap.getString("field_serveraddress.text")); // NOI18N
        field_serveraddress.setName("field_serveraddress"); // NOI18N

        field_port.setText(resourceMap.getString("field_port.text")); // NOI18N
        field_port.setName("field_port"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        field_user.setText(resourceMap.getString("field_user.text")); // NOI18N
        field_user.setName("field_user"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        field_password.setName("field_password"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        combo_servertyp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MySQL", "PostgreSQL", "MSSQL", "Oracle", "Derby", "Derby (lokal)" }));
        combo_servertyp.setName("combo_servertyp"); // NOI18N
        combo_servertyp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_servertypActionPerformed(evt);
            }
        });

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        field_databasename.setText(resourceMap.getString("field_databasename.text")); // NOI18N
        field_databasename.setName("field_databasename"); // NOI18N

        btnTest.setIcon(resourceMap.getIcon("btnTest.icon")); // NOI18N
        btnTest.setText(resourceMap.getString("btnTest.text")); // NOI18N
        btnTest.setName("btnTest"); // NOI18N
        btnTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestActionPerformed(evt);
            }
        });

        jToolTipLabel1.setIcon(resourceMap.getIcon("jToolTipLabel1.icon")); // NOI18N
        jToolTipLabel1.setText(resourceMap.getString("jToolTipLabel1.text")); // NOI18N
        jToolTipLabel1.setToolTipText(resourceMap.getString("jToolTipLabel1.toolTipText")); // NOI18N
        jToolTipLabel1.setName("jToolTipLabel1"); // NOI18N

        jToolTipLabel2.setToolTipText(resourceMap.getString("jToolTipLabel2.toolTipText")); // NOI18N
        jToolTipLabel2.setName("jToolTipLabel2"); // NOI18N

        jToolTipLabel3.setToolTipText(resourceMap.getString("jToolTipLabel3.toolTipText")); // NOI18N
        jToolTipLabel3.setName("jToolTipLabel3"); // NOI18N

        jToolTipLabel4.setToolTipText(resourceMap.getString("jToolTipLabel4.toolTipText")); // NOI18N
        jToolTipLabel4.setName("jToolTipLabel4"); // NOI18N

        jToolTipLabel5.setToolTipText(resourceMap.getString("jToolTipLabel5.toolTipText")); // NOI18N
        jToolTipLabel5.setName("jToolTipLabel5"); // NOI18N

        jToolTipLabel6.setToolTipText(resourceMap.getString("jToolTipLabel6.toolTipText")); // NOI18N
        jToolTipLabel6.setName("jToolTipLabel6"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                                .addComponent(combo_servertyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 291, Short.MAX_VALUE)
                                .addComponent(field_port, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(field_password)
                                    .addComponent(field_user, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)))
                            .addComponent(btnTest, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(field_databasename)
                                    .addComponent(field_serveraddress, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jToolTipLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jToolTipLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jToolTipLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jToolTipLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jToolTipLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jToolTipLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jToolTipLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combo_servertyp, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(field_serveraddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolTipLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(field_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolTipLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(field_databasename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolTipLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(field_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolTipLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(field_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jToolTipLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTest)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestActionPerformed
        int type = combo_servertyp.getSelectedIndex();

        boolean work = false;

        if(type == DatabaseTypes.MYSQL) {
            String url = "jdbc:mysql://" + this.field_serveraddress + "/" + this.field_databasename;
           
            if(this.field_port.getText() != null)
                url = "jdbc:mysql://" + this.field_serveraddress + ":" + this.field_port.getText() + "/" + this.field_databasename;
            work = MySQL.testMySQLConnection(new DatabaseHelper(url,this.field_user.getText(),String.valueOf(this.field_password.getPassword())));
        } else if (type == DatabaseTypes.POSTGRESQL) {
            String url = "jdbc:posgresql://" + this.field_serveraddress + "/" + this.field_databasename;

            if(this.field_port.getText() != null)
                url = "jdbc:posgresql://" + this.field_serveraddress + ":" + this.field_port.getText() + "/" + this.field_databasename;

            work = PostgreSQL.testPostgreSQLConnection(new DatabaseHelper(url,this.field_user.getText(),String.valueOf(this.field_password.getPassword())));
        } else if (type == DatabaseTypes.MSSQL) {
            work = false;
        } else if (type == DatabaseTypes.ORACLE) {
            work = false;
        } else if (type == DatabaseTypes.DERBY) {
            work = false;
        } else if (type == DatabaseTypes.EMBEDDED_DERBY) {
            work = DatabaseConnection.testLocalConnection();
        }

        if(work)
            JOptionPane.showMessageDialog(null, "Die Verbindung wurde erfolgreich hergestellt. "
                    + "Klicken Sie auf Speichern um diese zu übernehmen.", "Datenbankverbindung war erfolgreich.", JOptionPane.INFORMATION_MESSAGE);
        else
            JOptionPane.showMessageDialog(null, "Es konnte keine Verbindung zur Datenbank hergestellt werden. "
                    + "Bitte überprüfen Sie Ihre Einstellungen.", "Keine Verbindung zur Datenbank", JOptionPane.ERROR_MESSAGE);

    }//GEN-LAST:event_btnTestActionPerformed

    private void combo_servertypActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_servertypActionPerformed
        if(combo_servertyp.getSelectedIndex() == -1)
            return;

        if(combo_servertyp.getSelectedIndex() == 5) {
            this.field_user.setEnabled(false);
            this.field_password.setEnabled(false);
            this.field_databasename.setEnabled(false);
            this.field_port.setEnabled(false);
            this.field_serveraddress.setEnabled(false);
        } else {
            this.field_user.setEnabled(true);
            this.field_password.setEnabled(true);
            this.field_databasename.setEnabled(true);
            this.field_port.setEnabled(true);
            this.field_serveraddress.setEnabled(true);
        }
    }//GEN-LAST:event_combo_servertypActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTest;
    private javax.swing.JComboBox combo_servertyp;
    private javax.swing.JTextField field_databasename;
    private javax.swing.JPasswordField field_password;
    private javax.swing.JTextField field_port;
    private javax.swing.JTextField field_serveraddress;
    private javax.swing.JTextField field_user;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private de.maklerpoint.office.Tools.JToolTipLabel jToolTipLabel1;
    private de.maklerpoint.office.Tools.JToolTipLabel jToolTipLabel2;
    private de.maklerpoint.office.Tools.JToolTipLabel jToolTipLabel3;
    private de.maklerpoint.office.Tools.JToolTipLabel jToolTipLabel4;
    private de.maklerpoint.office.Tools.JToolTipLabel jToolTipLabel5;
    private de.maklerpoint.office.Tools.JToolTipLabel jToolTipLabel6;
    // End of variables declaration//GEN-END:variables





}

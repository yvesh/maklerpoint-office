/*
 *  Program:    MaklerPoint System
 *  Module:     Main
 *  Language:   Java / Swing
 *  Date:       2010/09/03 13:10
 *  Web:        http://www.maklerpoint.de
 *  Version:    0.6.1
 *
 *  Copyright (C) 2010 Yves Hoppe.  All Rights Reserved.
 *  See License.txt or http://www.maklerpoint.de/copyright for details.
 *
 *  This software is distributed WITHOUT ANY WARRANTY; without even the
 *  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 *  above copyright notices for details.
 */

/*
 * FakeSplashScreen.java
 *
 * Created on 26.08.2010, 12:14:31
 */
package de.acyrance.CRM.Gui.Splashscreen;

import de.acyrance.CRM.Benutzer.BenutzerObj;
import de.acyrance.CRM.CRM;
import de.acyrance.CRM.Database.DatabaseConnection;
import de.acyrance.CRM.Konstanten.MPointKonstanten;
import de.acyrance.CRM.Logging.Log;
import de.acyrance.CRM.Mandanten.Tools.MandantenSQLMethods;
import de.acyrance.CRM.Registry.BasicRegistry;
import de.acyrance.CRM.Session.Tools.SessionTools;
import de.acyrance.CRM.Startup.BenutzerTasks;
import de.acyrance.CRM.TipOfTheDay.TipOfTheDay;
import java.awt.Dimension;
import java.util.Timer;
import java.util.TimerTask;
import org.apache.log4j.Level;

/**
 *
 * @author yves
 */
public class FakeSplashScreenDeprecated extends javax.swing.JDialog {

    private static boolean loaded = false;
    private static BenutzerObj benutzer;

    public FakeSplashScreenDeprecated(java.awt.Frame parent, BenutzerObj benutzer) {
        super(parent);
        FakeSplashScreenDeprecated.benutzer = benutzer;
        this.setSize(new Dimension(300, 350));
//        this.setLocationRelativeTo(null);
//        Dimension dim = getToolkit().getScreenSize();
//        Rectangle abounds = getBounds();
//        this.setLocation((dim.width - abounds.width) / 2,
//            (dim.height - abounds.height) / 2);

//        this.setLocationRelativeTo(null);    
        initComponents();
        this.setIconImage(MPointKonstanten.icon);
        this.progressBar.setBorder(null);
//        this.setVisible(true);
//        this.toFront();
        Timer timer = new Timer();
        timer.schedule(new Task(this), 1000);
    }

    /** Creates new form FakeSplashScreen */
    public FakeSplashScreenDeprecated(java.awt.Frame parent, boolean modal, BenutzerObj benutzer) {
        super(parent, modal);
        FakeSplashScreenDeprecated.benutzer = benutzer;
        initComponents();
    }

    class Task extends TimerTask {

        private FakeSplashScreenDeprecated sp;

        public Task(FakeSplashScreenDeprecated sp) {
            this.sp = sp;
        }

        public void run() {
            sp.startUp();
        }
    }

    public void setStatus(int value, String name) {
        this.label_status.setText(name);
        this.progressBar.setValue(value);
        if (Log.logger.getLevel() == Level.DEBUG) {
            Log.logger.debug("Wert: " + value + " | Derzeitiger Vorgang: " + name);
        }
    }

    private void startUp() {
        try {
            setStatus(5, "Starte MaklerPoint Office");

            BasicRegistry.currentUser = benutzer;
            setStatus(10, "Registriere Benutzer");

            BasicRegistry.currentMandant = MandantenSQLMethods.loadMandat(DatabaseConnection.open(),
                    benutzer.getFirmenId());

            if (BasicRegistry.currentMandant == null) {
                System.out.println("Der Mandant wurde nicht gefunden!");
                throw new SecurityException("Der Mandant mit der Id " + benutzer.getFirmenId() + " wurde nicht gefunden!");
            }

            setStatus(15, "Lade die Stammdaten");

            BasicRegistry.logedIn = true;
            setStatus(18, "Starte Benutzersession");

            SessionTools.createSession(benutzer);

            BenutzerTasks.doBenutzerTasksSplash(this);

            setStatus(100, "MaklerPoint Office wird gestartet.");
            CRM.launch(null);
            CRM.getApplication().getMainFrame().toFront();
            this.dispose();
            TipOfTheDay.show();

        } catch (Exception e) {
            Log.logger.fatal("Konnte MaklerPoint Office nicht starten!", e);
            e.printStackTrace();
        }
    }

    public void closeIt() {
        dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        progressBar = new org.openswing.swing.miscellaneous.client.ProgressBar();
        label_status = new javax.swing.JLabel();
        label_bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.acyrance.CRM.CRM.class).getContext().getResourceMap(FakeSplashScreenDeprecated.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setAlwaysOnTop(true);
        setName("Form"); // NOI18N
        setResizable(false);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        progressBar.setColor(resourceMap.getColor("progressBar.color")); // NOI18N

        javax.swing.GroupLayout progressBarLayout = new javax.swing.GroupLayout(progressBar);
        progressBar.setLayout(progressBarLayout);
        progressBarLayout.setHorizontalGroup(
            progressBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );
        progressBarLayout.setVerticalGroup(
            progressBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        getContentPane().add(progressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 300, 7));

        label_status.setFont(resourceMap.getFont("label_status.font")); // NOI18N
        label_status.setForeground(resourceMap.getColor("label_status.foreground")); // NOI18N
        label_status.setText(resourceMap.getString("label_status.text")); // NOI18N
        label_status.setName("label_status"); // NOI18N
        label_status.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                label_statusMouseClicked(evt);
            }
        });
        getContentPane().add(label_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, -1));

        label_bg.setIcon(resourceMap.getIcon("label_bg.icon")); // NOI18N
        label_bg.setText(resourceMap.getString("label_bg.text")); // NOI18N
        label_bg.setName("label_bg"); // NOI18N
        getContentPane().add(label_bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void label_statusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_label_statusMouseClicked
//        this.dispose();
    }//GEN-LAST:event_label_statusMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                FakeSplashScreenDeprecated dialog = new FakeSplashScreenDeprecated(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
//                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label_bg;
    public javax.swing.JLabel label_status;
    public org.openswing.swing.miscellaneous.client.ProgressBar progressBar;
    // End of variables declaration//GEN-END:variables
}

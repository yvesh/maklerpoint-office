/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ZusatzadresseAuswahlDialog.java
 *
 * Created on 14.06.2011, 20:26:04
 */
package de.maklerpoint.office.Gui.Tools;

import de.maklerpoint.office.Database.DatabaseConnection;
import de.maklerpoint.office.Exception.ShowException;
import de.maklerpoint.office.Gui.Exception.ExceptionDialogGui;
import de.maklerpoint.office.Kunden.Tools.ZusatzadressenSQLMethods;
import de.maklerpoint.office.Kunden.ZusatzadressenObj;
import de.maklerpoint.office.Logging.Log;
import de.maklerpoint.office.System.Status;
import de.maklerpoint.office.Tools.ArrayTools;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Yves Hoppe <hoppe at maklerpoint.de>
 */
public class KundenAdresseAuswahlDialog extends javax.swing.JDialog {

    private ZusatzadressenObj zuad = null;
    private String kdnr;
    
    /** Creates new form ZusatzadresseAuswahlDialog */
    public KundenAdresseAuswahlDialog(java.awt.Frame parent, boolean modal, String kdnr) {
        super(parent, modal);
        this.kdnr = kdnr;
        this.zuad = null;
        initComponents();
        setUp();
    }
    
    public KundenAdresseAuswahlDialog(java.awt.Frame parent, boolean modal, String kdnr, ZusatzadressenObj[] za) {
        super(parent, modal);
        this.kdnr = kdnr;
        this.zuad = null;
        initComponents();
        setUp();
    }

    private void setUp(){
        try {
            ZusatzadressenObj[] zb = ZusatzadressenSQLMethods.loadZusatzadressen(
                    DatabaseConnection.open(), kdnr, Status.NORMAL);
                        
            if(zb!= null)
            {
                this.combo_adresse.setModel(new DefaultComboBoxModel(ArrayTools.arrayPlusOne(zb, "Standardadresse verwenden")));
//                this.loadText(zb[0]);
            } else {
                this.dispose(); // Sinnlos f√ºr eine Adresse zu testen                
                this.combo_adresse.setModel(new DefaultComboBoxModel(new Object[]{"Standardadresse verwenden"}));
            }
            
         } catch (Exception e) {
            Log.databaselogger.fatal("Fehler: Konnte Zusatzadressen nicht aus der Datenbank laden", e);
            ShowException.showException("Datenbankfehler: Die Kundenzusatzadressen konnten nicht geladen werden.",
                ExceptionDialogGui.LEVEL_WARNING, e, "Schwerwiegend: Konnte Zusatzadressen nicht laden");
        }          
    }
    
    private void loadText(ZusatzadressenObj zs) {
        StringBuilder sb = new StringBuilder();
        sb.append("Name:\t");
        sb.append(zs.getName());
        sb.append("\n");
        sb.append("Zusatz:\t");
        sb.append(zs.getNameZusatz());
        sb.append("\n");
        sb.append("Strasse:\t");
        sb.append(zs.getStreet());
        sb.append("\n");
        sb.append("PLZ / ORT:\t");
        sb.append(zs.getPlz());
        sb.append(" ");
        sb.append(zs.getOrt());
        sb.append("\n");
        sb.append("Kommunikation 1:\t");
        sb.append(zs.getCommunication1());
        sb.append("\n");
        this.text_kurzinfo.setText(sb.toString());
    }

    private void doClose() {
        zuad = null;
        setVisible(false);
        dispose();
    }
    
    public ZusatzadressenObj getReturn() {
        return zuad;
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        combo_adresse = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_kurzinfo = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(250, 300));
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.maklerpoint.office.start.CRM.class).getContext().getResourceMap(KundenAdresseAuswahlDialog.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        combo_adresse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_adresse.setName("combo_adresse"); // NOI18N
        combo_adresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_adresseActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        text_kurzinfo.setColumns(20);
        text_kurzinfo.setEditable(false);
        text_kurzinfo.setRows(5);
        text_kurzinfo.setName("text_kurzinfo"); // NOI18N
        jScrollPane1.setViewportView(text_kurzinfo);

        cancelButton.setMnemonic('A');
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setMnemonic('O');
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(68, 68, 68))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(combo_adresse, javax.swing.GroupLayout.Alignment.LEADING, 0, 270, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 295, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_adresse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_adresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_adresseActionPerformed
        if (combo_adresse.getSelectedIndex() == -1) {
            return;
        }
        try {
            ZusatzadressenObj zd = (ZusatzadressenObj) combo_adresse.getSelectedItem();
            loadText(zd);
        } catch (Exception e) {
            this.text_kurzinfo.setText("");
        }
}//GEN-LAST:event_combo_adresseActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            zuad = (ZusatzadressenObj) combo_adresse.getSelectedItem();
        } catch (Exception e) {
            zuad = null;
        }
        
        this.dispose();
}//GEN-LAST:event_okButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                KundenAdresseAuswahlDialog dialog = new KundenAdresseAuswahlDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox combo_adresse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton okButton;
    private javax.swing.JTextArea text_kurzinfo;
    // End of variables declaration//GEN-END:variables
}

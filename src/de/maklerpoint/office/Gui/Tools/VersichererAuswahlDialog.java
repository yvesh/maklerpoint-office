/*
 *  Program:    MaklerPoint System
 *  Module:     Main
 *  Language:   Java / Swing
 *  Date:       2010/09/03 13:10
 *  Web:        http://www.maklerpoint.de
 *  Version:    0.6.1
 *
 *  Copyright (C) 2010 Yves Hoppe.  All Rights Reserved.
 *  See License.txt or http://www.maklerpoint.de/copyright for details.
 *
 *  This software is distributed WITHOUT ANY WARRANTY; without even the
 *  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 *  above copyright notices for details.
 */

/*
 * VersichererAuswahlDialog.java
 *
 * Created on 19.09.2010, 12:22:27
 */

package de.maklerpoint.office.Gui.Tools;

import de.maklerpoint.office.Registry.VersicherungsRegistry;
import de.maklerpoint.office.System.Status;
import de.maklerpoint.office.Versicherer.VersichererObj;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author yves
 */
public class VersichererAuswahlDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    VersichererObj vers = null;

    /** Creates new form VersichererAuswahlDialog */
    public VersichererAuswahlDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        vers = null;
        initComponents();
        loadVersicherer();
    }

    private void loadVersicherer() {
        VersichererObj[] versicherer = VersicherungsRegistry.getVersicherer(Status.NORMAL);
        this.combo_versicherer.setModel(new DefaultComboBoxModel(versicherer));

        if(versicherer != null)
            loadText(versicherer[0]);
    }

    /**
     * 
     * @param vs
     */

    private void loadText(VersichererObj vs) {
        StringBuilder sb = new StringBuilder();
        sb.append("Versicherer:\t");
        sb.append(vers.getName());
        sb.append("\n");
        sb.append("KÃ¼rzel:\t");
        sb.append(vers.getKuerzel());
        sb.append("\n");
        sb.append("VU-Nummer:\t");
        sb.append(vers.getVuNummer());
        sb.append("\n");
        sb.append("Strasse:\t");
        sb.append(vers.getStrasse());
        sb.append("\n");
        sb.append("Plz / Ort:\t");
        sb.append(vers.getPlz());
        sb.append(" ");
        sb.append(vers.getStadt());
        sb.append("\n");
    }

    private void doClose(VersichererObj davers) {
        returnVers = davers;
        setVisible(false);
        dispose();
    }

    private void doClose() {
        returnVers = null;
        setVisible(false);
        dispose();
    }

     public VersichererObj getReturnStatus() {
        return returnVers;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combo_versicherer = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_kurzinfo = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.maklerpoint.office.start.CRM.class).getContext().getResourceMap(VersichererAuswahlDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        combo_versicherer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_versicherer.setName("combo_versicherer"); // NOI18N
        combo_versicherer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_versichererActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        text_kurzinfo.setColumns(20);
        text_kurzinfo.setEditable(false);
        text_kurzinfo.setRows(5);
        text_kurzinfo.setName("text_kurzinfo"); // NOI18N
        jScrollPane1.setViewportView(text_kurzinfo);

        cancelButton.setMnemonic('A');
        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setMnemonic('O');
        okButton.setText(resourceMap.getString("okButton.text")); // NOI18N
        okButton.setName("okButton"); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(68, 68, 68))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(combo_versicherer, javax.swing.GroupLayout.Alignment.LEADING, 0, 324, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE))
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(combo_versicherer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_versichererActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_versichererActionPerformed
        if(combo_versicherer.getSelectedIndex() == -1)
            return;

        VersichererObj selvers = (VersichererObj) combo_versicherer.getSelectedItem();
        loadText(selvers);
        
}//GEN-LAST:event_combo_versichererActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose();
}//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose((VersichererObj) combo_versicherer.getSelectedItem());
}//GEN-LAST:event_okButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VersichererAuswahlDialog dialog = new VersichererAuswahlDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton cancelButton;
    public javax.swing.JComboBox combo_versicherer;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JButton okButton;
    public javax.swing.JTextArea text_kurzinfo;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
    private VersichererObj returnVers = null;
}

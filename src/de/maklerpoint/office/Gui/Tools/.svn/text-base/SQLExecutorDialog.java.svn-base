/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SQLExecutorDialog.java
 *
 * Created on 14.06.2011, 09:28:42
 */
package de.acyrance.CRM.Gui.Tools;

import de.acyrance.CRM.Database.DatabaseConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 *
 * @author Yves Hoppe <hoppe at maklerpoint.de>
 */
public class SQLExecutorDialog extends javax.swing.JDialog {

    /** Creates new form SQLExecutorDialog */
    public SQLExecutorDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExecute = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        field_command = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        field_output = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.acyrance.CRM.CRM.class).getContext().getResourceMap(SQLExecutorDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        btnExecute.setText(resourceMap.getString("btnExecute.text")); // NOI18N
        btnExecute.setName("btnExecute"); // NOI18N
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setIcon(resourceMap.getIcon("jLabel9.icon")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        jLabel9.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        field_command.setText(resourceMap.getString("field_command.text")); // NOI18N
        field_command.setName("field_command"); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jScrollPane1.border.title"))); // NOI18N
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        field_output.setColumns(20);
        field_output.setRows(5);
        field_output.setName("field_output"); // NOI18N
        jScrollPane1.setViewportView(field_output);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(field_command, javax.swing.GroupLayout.DEFAULT_SIZE, 675, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExecute, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(field_command, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExecute))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        
        Connection con = DatabaseConnection.open();
        String sql = field_command.getText().trim();
        
        if(sql.toLowerCase().contains("select"))
        {
            try {
                PreparedStatement statement = con.prepareStatement(sql, 
                        ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet entry = statement.executeQuery();

                java.sql.ResultSetMetaData meta = statement.getMetaData();
                int spalten = meta.getColumnCount();

                entry.last();
                int rows = entry.getRow();
                entry.beforeFirst();

                if(rows == 0) {
                    entry.close();
                    statement.close();
                    con.close();
                    this.field_output.setText("Keine Ergebnisse");
                }

                StringBuilder sb = new StringBuilder();

                for(int i = 0; i < rows; i++)
                {
                    entry.next();
                    sb.append("Zeile ").append(i + 1);
                    sb.append(": ");

                    for(int j = 1; j <(spalten + 1); j++)
                    { 
                        sb.append(entry.getString(j));
                        sb.append(" ");
                    }

                    sb.append("\n");
                }

                this.field_output.setText(sb.toString());
                entry.close();
                statement.close();
                con.close();

            } catch (SQLException ex) {
                this.field_output.setText(ex.getMessage());
            }
        } else if (sql.toLowerCase().contains("update") || sql.toLowerCase().contains("delete")) {
            try {
                Statement statement = con.createStatement();                
                boolean exec = statement.execute(sql);
                
                StringBuilder sb = new StringBuilder();
                
                if(exec)
                    sb.append("Das SQL Statement wurde erfolgreich ausgeführt.");
                else
                    sb.append("Das SQL Statement wurde nicht erfolgreich ausgeführt.");
                
                sb.append("\n");
                
                sb.append("Warnungen:\n");
                sb.append(statement.getWarnings());
                
                
                this.field_output.setText(sb.toString());

            } catch (SQLException ex) {
                this.field_output.setText(ex.getMessage());
            }
        }
        
        
        
    }//GEN-LAST:event_btnExecuteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SQLExecutorDialog dialog = new SQLExecutorDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecute;
    private javax.swing.JTextField field_command;
    private javax.swing.JTextArea field_output;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

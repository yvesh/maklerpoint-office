/*
 *  Program:    MaklerPoint System
 *  Module:     Main
 *  Language:   Java / Swing
 *  Date:       2010/09/03 13:10
 *  Web:        http://www.maklerpoint.de
 *  Version:    0.6.1
 *
 *  Copyright (C) 2010 Yves Hoppe.  All Rights Reserved.
 *  See License.txt or http://www.maklerpoint.de/copyright for details.
 *
 *  This software is distributed WITHOUT ANY WARRANTY; without even the
 *  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 *  above copyright notices for details.
 */

/*
 * GoOfflineDialog.java
 *
 * Created on 16.08.2010, 13:11:42
 */

package de.acyrance.CRM.Gui.OfflineMode;

import de.acyrance.CRM.Database.DatabaseConnection;
import de.acyrance.CRM.Database.DatabaseTypes;
import de.acyrance.CRM.Gui.CRMView;
import de.acyrance.CRM.Logging.Log;
import de.acyrance.CRM.OfflineMode.SynchronizeLocalDatabase;
import de.acyrance.CRM.OfflineMode.SynchronizeFilesystem;
import de.acyrance.CRM.Registry.BasicRegistry;
import de.acyrance.CRM.Registry.BenutzerRegistry;
import de.acyrance.CRM.Session.Tools.SessionTools;
import de.acyrance.CRM.Startup.BenutzerTasks;
import de.acyrance.CRM.System.Configuration.Config;
import de.acyrance.CRM.System.Configuration.LocalDatabaseConfig;
import de.acyrance.CRM.System.Status;
import java.awt.Cursor;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author yveshoppe
 */
public class GoOfflineDialog extends javax.swing.JDialog {

    private CRMView crm;

    /** Creates new form GoOfflineDialog */
    public GoOfflineDialog(java.awt.Frame parent, boolean modal, CRMView crm) {
        super(parent, modal);
        this.crm = crm;
        initComponents();
//        setupDialog();
    }

    private void setupDialog() {       
        this.setSize(this.getWidth(), this.getHeight() - 60);
        this.repaint();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_header = new javax.swing.JLabel();
        check_lokaldatabase = new javax.swing.JCheckBox();
        check_lokalfilesystem = new javax.swing.JCheckBox();
        btnStart = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_intro = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.acyrance.CRM.CRM.class).getContext().getResourceMap(GoOfflineDialog.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        label_header.setIcon(resourceMap.getIcon("label_header.icon")); // NOI18N
        label_header.setName("label_header"); // NOI18N

        check_lokaldatabase.setSelected(true);
        check_lokaldatabase.setText(resourceMap.getString("check_lokaldatabase.text")); // NOI18N
        check_lokaldatabase.setName("check_lokaldatabase"); // NOI18N

        check_lokalfilesystem.setText(resourceMap.getString("check_lokalfilesystem.text")); // NOI18N
        check_lokalfilesystem.setName("check_lokalfilesystem"); // NOI18N

        btnStart.setMnemonic('O');
        btnStart.setText(resourceMap.getString("btnStart.text")); // NOI18N
        btnStart.setName("btnStart"); // NOI18N
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnCancel.setMnemonic('A');
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(null);
        jScrollPane1.setName("jScrollPane1"); // NOI18N

        text_intro.setBorder(null);
        text_intro.setEditable(false);
        text_intro.setText(resourceMap.getString("text_intro.text")); // NOI18N
        text_intro.setName("text_intro"); // NOI18N
        jScrollPane1.setViewportView(text_intro);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(check_lokalfilesystem)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(check_lokaldatabase))
                .addContainerGap(160, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .add(btnCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(btnStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 169, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(95, 95, 95))
            .add(label_header, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 490, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(label_header, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(check_lokaldatabase)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(check_lokalfilesystem)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnStart)
                    .add(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        crm.offlineCheckMenuItem.setSelected(false);
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        this.btnCancel.setEnabled(false);
        this.btnStart.setEnabled(false);
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        boolean success = DatabaseConnection.testConnection(DatabaseTypes.EMBEDDED_DERBY);

        if(!success) {
            JOptionPane.showMessageDialog(null, "Es konnte keine Verbindung zur lokalen Datenbank  \""
                        + LocalDatabaseConfig.DB_NAME + "\" [Derby] hergestellt werden. "
                        + "Bitte überprüfen Sie Ihre Datenbank Einstellungen.",
                        "Keine Verbindung zur internen Datenbank", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            SessionTools.deleteSession(BasicRegistry.currentSession);
        } catch (SQLException e) {
            System.out.println("Fehler: Konnte Session nicht beenden");
            Log.logger.fatal("Konnte Session nicht beenden", e);
        }
        
       
        if(this.check_lokaldatabase.isSelected()) {            
            SynchronizeLocalDatabase.synchronizeDatabase();
        }

        if(this.check_lokalfilesystem.isSelected()) {          
            SynchronizeFilesystem.synchronizeFilesystem();
        }                  

        // Set offline mode
        
        Config.setBoolean("offlineModus", true);
        crm.offlineCheckMenuItem.setSelected(true);
        crm.label_database.setText("Im Offline Modus (Embedded DB)");

        BenutzerRegistry.allUser = BenutzerRegistry.getAllBenutzer(Status.NORMAL);
        BenutzerTasks.doBenutzerTasks();

        this.btnCancel.setEnabled(true);
        this.btnStart.setEnabled(true);
        this.setCursor(Cursor.getDefaultCursor());
        this.dispose();
    }//GEN-LAST:event_btnStartActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GoOfflineDialog dialog = new GoOfflineDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnStart;
    private javax.swing.JCheckBox check_lokaldatabase;
    private javax.swing.JCheckBox check_lokalfilesystem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_header;
    private javax.swing.JTextPane text_intro;
    // End of variables declaration//GEN-END:variables

}

/*
 *  Program:    MaklerPoint System
 *  Module:     Main
 *  Language:   Java / Swing
 *  Date:       2010/09/03 13:10
 *  Web:        http://www.maklerpoint.de
 *  Version:    0.6.1
 *
 *  Copyright (C) 2010 Yves Hoppe.  All Rights Reserved.
 *  See License.txt or http://www.maklerpoint.de/copyright for details.
 *
 *  This software is distributed WITHOUT ANY WARRANTY; without even the
 *  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See
 *  above copyright notices for details.
 */

/*
 * panelAdressbuch.java
 *
 * Created on Jul 28, 2010, 12:33:47 PM
 */
package de.acyrance.CRM.Gui.Leftpane;

import de.acyrance.CRM.Benutzer.BenutzerObj;
import de.acyrance.CRM.Communication.CommunicationTypes;
import de.acyrance.CRM.Gui.Benutzer.PanelBenutzerUebersicht;
import de.acyrance.CRM.Gui.CRMView;
import de.acyrance.CRM.Gui.Firmenkunden.PanelFirmenKundenUebersicht;
import de.acyrance.CRM.Gui.Kunden.PanelKundenUebersicht;
import de.acyrance.CRM.Gui.Versicherer.PanelVersichererUebersicht;
import de.acyrance.CRM.Kontakte.KontaktObj;
import de.acyrance.CRM.Kunden.FirmenObj;
import de.acyrance.CRM.Kunden.KundenObj;
import de.acyrance.CRM.Kunden.Tools.KundenMailHelper;
import de.acyrance.CRM.Registry.BenutzerRegistry;
import de.acyrance.CRM.Registry.KontakteRegistry;
import de.acyrance.CRM.Registry.KundenRegistry;
import de.acyrance.CRM.Registry.VersicherungsRegistry;
import de.acyrance.CRM.System.Status;
import de.acyrance.CRM.Table.AbstractStandardModel;
import de.acyrance.CRM.Table.AdressbuchModel;
import de.acyrance.CRM.Table.JLabelCellRenderer;
import de.acyrance.CRM.Tools.POJOTools;
import de.acyrance.CRM.Versicherer.VersichererObj;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelEvent;
import javax.swing.table.TableModel;

/**
 *
 * @author Yves Hoppe <info at yves-hoppe.de>
 */
public class panelAdressbuch extends javax.swing.JPanel {

    private static CRMView crm;
    private String[] Column = new String[]{"Hidden", "Name", "Kom. 1", "Kom. 2", "Kom. 3", "E-Mail"};

    /** Creates new form panelAdressbuch */
    public panelAdressbuch(CRMView crm) {
        panelAdressbuch.crm = crm;
        initComponents();
//        this.jToolBar1.add(Box.createHorizontalGlue(), 0);
        loadAdressen();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toogleknd = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_adressbuch = new org.jdesktop.swingx.JXTable();
        jToolBar1 = new javax.swing.JToolBar();
        btnPK = new javax.swing.JToggleButton();
        btnGK = new javax.swing.JToggleButton();
        btnKontakte = new javax.swing.JToggleButton();
        btnBenutzer = new javax.swing.JToggleButton();
        btnVersicherer = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        field_cardsearch = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();

        setName("Form"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        table_adressbuch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Kommunikation 1", "E-Mail"
            }
        ));
        table_adressbuch.setColumnControlVisible(true);
        table_adressbuch.setName("table_adressbuch"); // NOI18N
        table_adressbuch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_adressbuchMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_adressbuch);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setName("jToolBar1"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(de.acyrance.CRM.CRM.class).getContext().getResourceMap(panelAdressbuch.class);
        btnPK.setIcon(resourceMap.getIcon("btnPK.icon")); // NOI18N
        btnPK.setSelected(true);
        btnPK.setText(resourceMap.getString("btnPK.text")); // NOI18N
        btnPK.setToolTipText(resourceMap.getString("btnPK.toolTipText")); // NOI18N
        btnPK.setFocusable(false);
        btnPK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPK.setName("btnPK"); // NOI18N
        btnPK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPK);

        btnGK.setIcon(resourceMap.getIcon("btnGK.icon")); // NOI18N
        btnGK.setSelected(true);
        btnGK.setToolTipText(resourceMap.getString("btnGK.toolTipText")); // NOI18N
        btnGK.setFocusable(false);
        btnGK.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGK.setName("btnGK"); // NOI18N
        btnGK.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGK);

        btnKontakte.setIcon(resourceMap.getIcon("btnKontakte.icon")); // NOI18N
        btnKontakte.setText(resourceMap.getString("btnKontakte.text")); // NOI18N
        btnKontakte.setToolTipText(resourceMap.getString("btnKontakte.toolTipText")); // NOI18N
        btnKontakte.setFocusable(false);
        btnKontakte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnKontakte.setName("btnKontakte"); // NOI18N
        btnKontakte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnKontakte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnKontakte);

        btnBenutzer.setIcon(resourceMap.getIcon("btnBenutzer.icon")); // NOI18N
        btnBenutzer.setToolTipText(resourceMap.getString("btnBenutzer.toolTipText")); // NOI18N
        btnBenutzer.setFocusable(false);
        btnBenutzer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBenutzer.setName("btnBenutzer"); // NOI18N
        btnBenutzer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnBenutzer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnBenutzer);

        btnVersicherer.setIcon(resourceMap.getIcon("btnVersicherer.icon")); // NOI18N
        btnVersicherer.setToolTipText(resourceMap.getString("btnVersicherer.toolTipText")); // NOI18N
        btnVersicherer.setFocusable(false);
        btnVersicherer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVersicherer.setName("btnVersicherer"); // NOI18N
        btnVersicherer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVersicherer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGKActionPerformed(evt);
            }
        });
        jToolBar1.add(btnVersicherer);

        jSeparator1.setName("jSeparator1"); // NOI18N
        jToolBar1.add(jSeparator1);

        field_cardsearch.setText(resourceMap.getString("field_cardsearch.text")); // NOI18N
        field_cardsearch.setName("field_cardsearch"); // NOI18N
        field_cardsearch.setPreferredSize(new java.awt.Dimension(100, 25));
        field_cardsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                field_cardsearchMouseClicked(evt);
            }
        });
        field_cardsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_cardsearchKeyTyped(evt);
            }
        });
        jToolBar1.add(field_cardsearch);

        btn_search.setIcon(resourceMap.getIcon("btn_search.icon")); // NOI18N
        btn_search.setToolTipText(resourceMap.getString("btn_search.toolTipText")); // NOI18N
        btn_search.setBorderPainted(false);
        btn_search.setFocusable(false);
        btn_search.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_search.setName("btn_search"); // NOI18N
        btn_search.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_search);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void loadAdressen() {
        KundenObj[] privknd = null;
        FirmenObj[] firmknd = null;
        VersichererObj[] vers = null;
        BenutzerObj[] ben = null;
        KontaktObj[] kontakte = null;
        
        if(this.btnPK.isSelected()) {
            privknd = KundenRegistry.getKunden(Status.NORMAL);
        }
        
        if(this.btnGK.isSelected()) {
            firmknd = KundenRegistry.getFirmenKunden(false, Status.NORMAL);
        }
        
        if(this.btnVersicherer.isSelected()) {
            vers = VersicherungsRegistry.getVersicherer(Status.NORMAL);
        }
        
        if(this.btnBenutzer.isSelected()) {
            ben = BenutzerRegistry.getAllBenutzer(Status.NORMAL);
        }
        
        if(this.btnKontakte.isSelected()) {
            kontakte = KontakteRegistry.getEigeneKontakte(Status.NORMAL);        
        }
        Object[][] data = null;

        data = new Object[POJOTools.calulcateLenght(privknd, firmknd, vers, ben, kontakte)][6];

        int cnt = 0;

        if(this.btnPK.isSelected()) {
            if (privknd != null) {

                for (int i = 0; i < privknd.length; i++) {
                    data[cnt][0] = privknd[i];
                    data[cnt][1] = privknd[i].toString();
                    data[cnt][2] = CommunicationTypes.getCommunicationLabel(privknd[i], 1);
                    data[cnt][3] = CommunicationTypes.getCommunicationLabel(privknd[i], 2);
                    data[cnt][4] = CommunicationTypes.getCommunicationLabel(privknd[i], 3);
                    data[cnt][5] = KundenMailHelper.getKundenMail(privknd[i]);

                    cnt++;
                }
            }
        }

        if(this.btnGK.isSelected()) {
            if (firmknd != null) {
                for (int i = 0; i < firmknd.length; i++) {
                    data[cnt][0] = firmknd[i];
                    data[cnt][1] = firmknd[i].toString();
                    data[cnt][2] = CommunicationTypes.getCommunicationLabel(firmknd[i], 1);
                    data[cnt][3] = CommunicationTypes.getCommunicationLabel(firmknd[i], 2);
                    data[cnt][4] = CommunicationTypes.getCommunicationLabel(firmknd[i], 3);
                    data[cnt][5] = KundenMailHelper.getGeschKundenMail(firmknd[i]);

                    cnt++;
                }
            }
        }

        if(this.btnBenutzer.isSelected()) {
            if (ben != null) {
                for (int i = 0; i < ben.length; i++) {
                    data[cnt][0] = ben[i];
                    data[cnt][1] = ben[i].toString();
                    data[cnt][2] = ben[i].getTelefon();
                    data[cnt][3] = ben[i].getTelefon2();
                    data[cnt][4] = ben[i].getMobil();
                    data[cnt][5] = ben[i].getEmail();
                    cnt++;
                }
            }
        }
        
        if(this.btnKontakte.isSelected()) {
            if(kontakte != null) {
                for (int i = 0; i < kontakte.length; i++) {
                    data[cnt][0] = kontakte[i];
                    data[cnt][1] = kontakte[i].getName();
                    data[cnt][2] = CommunicationTypes.getCommunicationLabel(kontakte[i], 1);
                    data[cnt][3] = CommunicationTypes.getCommunicationLabel(kontakte[i], 2);
                    data[cnt][4] = CommunicationTypes.getCommunicationLabel(kontakte[i], 3);
                    data[cnt][5] = KundenMailHelper.getKontaktMail(kontakte[i]);
                    cnt++;
                }
            }
        }

       if(this.btnVersicherer.isSelected())
       {
           if (vers != null) {
                for (int i = 0; i < vers.length; i++) {
                    data[cnt][0] = vers[i];
                    data[cnt][1] = vers[i].toString();
                    data[cnt][2] = CommunicationTypes.getCommunicationLabel(vers[i], 1);
                    data[cnt][3] = CommunicationTypes.getCommunicationLabel(vers[i], 2);
                    data[cnt][4] = CommunicationTypes.getCommunicationLabel(vers[i], 3);
                    data[cnt][5] = KundenMailHelper.getVersichererMail(vers[i]);

                    cnt++;
                }
            }
       }

        setTable(data, Column);
    }
    
    private AbstractStandardModel atm = null;

    private void setTable(Object[][] data, String[] columns) {
        if (atm == null) {
            atm = new AbstractStandardModel(data, columns);
            table_adressbuch.setModel(atm);
        } else {
            atm = (AbstractStandardModel) table_adressbuch.getModel();
            atm.setData(data);
            table_adressbuch.packAll();
            return;
        }

        table_adressbuch.setDefaultRenderer(JLabel.class, new JLabelCellRenderer());
        table_adressbuch.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        table_adressbuch.setColumnSelectionAllowed(false);
        table_adressbuch.setCellSelectionEnabled(false);
        table_adressbuch.setRowSelectionAllowed(true);
        table_adressbuch.setAutoCreateRowSorter(true);

        table_adressbuch.setFillsViewportHeight(true);
        table_adressbuch.removeColumn(table_adressbuch.getColumnModel().getColumn(0));

        table_adressbuch.getColumnExt("E-Mail").setVisible(false);
        table_adressbuch.getColumnExt("Kom. 2").setVisible(false);
        table_adressbuch.getColumnExt("Kom. 3").setVisible(false);

//        MouseListener popupListener = new TablePopupListener();
//        table_adressbuch.addMouseListener(popupListener);
        table_adressbuch.setColumnControlVisible(true);

//        JTableHeader header = table_adressbuch.getTableHeader();
//        header.addMouseListener(popupListener);
//        header.validate();

        table_adressbuch.packAll();
    }

    private void table_adressbuchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_adressbuchMouseClicked
        if (evt.getClickCount() > 1) {
            int row = this.table_adressbuch.getSelectedRow();

            if (row == -1) {
                return;
            }

//            System.out.println("Class: " + table_adressbuch.getModel().getValueAt(row, 0).getClass());

            // TODO Fix this
            
            try {
                KundenObj kunde = (KundenObj) table_adressbuch.getModel().getValueAt(row, 0);

                if (crm.toolWindowManager.getContentManager().getContent("kunden") == null) {
                    crm.toolWindowManager.getContentManager().addContent("kunden",
                            "Privatkunden",
                            null, // An icon
                            new PanelKundenUebersicht(crm, kunde));
                } else {
//                    System.out.println("Not null");
                    PanelKundenUebersicht pku = (PanelKundenUebersicht) crm.toolWindowManager.getContentManager().getContent("kunden").getComponent();
                    pku.setSelkunde(kunde);

                    pku.loadTable();
                }
                crm.toolWindowManager.getContentManager().getContent("kunden").setSelected(true);

                return;
            } catch (Exception e) {
            }


            try {
                FirmenObj kunde = (FirmenObj) table_adressbuch.getModel().getValueAt(row, 0);
                //System.out.println("Firmenkunde: " + kunde.getFirmenName());
                if (crm.toolWindowManager.getContentManager().getContent("fkunden") == null) {
                    crm.toolWindowManager.getContentManager().addContent("fkunden",
                            "Geschäftskunden",
                            null, // An icon
                            new PanelFirmenKundenUebersicht(crm, kunde));
                } else {
                    PanelFirmenKundenUebersicht pfu = (PanelFirmenKundenUebersicht) crm.toolWindowManager.getContentManager().getContent("fkunden").getComponent();

                    pfu.setSelkunde(kunde);

                    pfu.loadTable();
                }
                crm.toolWindowManager.getContentManager().getContent("fkunden").setSelected(true);

                return;
            } catch (Exception e) {
            }


            try {
                BenutzerObj ben = (BenutzerObj) table_adressbuch.getModel().getValueAt(row, 0);
                //System.out.println("Firmenkunde: " + kunde.getFirmenName());
                if (crm.toolWindowManager.getContentManager().getContent("benutzer") == null) {
                    crm.toolWindowManager.getContentManager().addContent("benutzer",
                            "Benutzer",
                            null, // An icon
                            new PanelBenutzerUebersicht(crm, ben));
                } else {
                    PanelBenutzerUebersicht pbu = (PanelBenutzerUebersicht) crm.toolWindowManager.getContentManager().getContent("benutzer").getComponent();

                    pbu.setSelben(ben);

                    pbu.loadTable();
                }
                crm.toolWindowManager.getContentManager().getContent("benutzer").setSelected(true);

                return;
            } catch (Exception e) {
            }

            try {
                VersichererObj vers = (VersichererObj) table_adressbuch.getModel().getValueAt(row, 0);
                //System.out.println("Firmenkunde: " + kunde.getFirmenName());
                if (crm.toolWindowManager.getContentManager().getContent("vs") == null) {
                    crm.toolWindowManager.getContentManager().addContent("vs",
                            "Gesellschaften",
                            null, // An icon
                            new PanelVersichererUebersicht(crm, vers));
                } else {
                    PanelVersichererUebersicht pvu = (PanelVersichererUebersicht) 
                            crm.toolWindowManager.getContentManager().getContent("vs").getComponent();

                    pvu.setSelvers(vers);

                    pvu.loadTable();
                }
                crm.toolWindowManager.getContentManager().getContent("vs").setSelected(true);

                return;
            } catch (Exception e) {
            }


        }
    }//GEN-LAST:event_table_adressbuchMouseClicked

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        table_adressbuch.getSearchable().search(field_cardsearch.getText());
}//GEN-LAST:event_btn_searchActionPerformed

    private void field_cardsearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_cardsearchKeyTyped
        table_adressbuch.getSearchable().search(field_cardsearch.getText());
    }//GEN-LAST:event_field_cardsearchKeyTyped

    private void btnGKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGKActionPerformed
        loadAdressen();
    }//GEN-LAST:event_btnGKActionPerformed

    private void field_cardsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_field_cardsearchMouseClicked
        if(this.field_cardsearch.getText().equalsIgnoreCase("suche..")) {
            this.field_cardsearch.setText("");            
        }
    }//GEN-LAST:event_field_cardsearchMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btnBenutzer;
    private javax.swing.JToggleButton btnGK;
    private javax.swing.JToggleButton btnKontakte;
    private javax.swing.JToggleButton btnPK;
    private javax.swing.JToggleButton btnVersicherer;
    public static javax.swing.JButton btn_search;
    public static javax.swing.JTextField field_cardsearch;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private org.jdesktop.swingx.JXTable table_adressbuch;
    private javax.swing.ButtonGroup toogleknd;
    // End of variables declaration//GEN-END:variables
}
